// <auto-generated />
using System;
using EntityFramework22Application.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EntityFramework22Application.Migrations
{
    [DbContext(typeof(AdventureWorksContext))]
    partial class AdventureWorksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EntityFramework22Application.Model.Address", b =>
                {
                    b.Property<int>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .IsRequired();

                    b.Property<string>("AddressLine2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("CountryRegion")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("CustomerId");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(true);

                    b.Property<string>("StateProvince")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("AddressId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("StateProvince");

                    b.HasIndex("City", "StateProvince", "PostalCode", "CountryRegion");

                    b.ToTable("Address");

                    b.HasData(
                        new
                        {
                            AddressId = 1,
                            AddressLine1 = "8713 Yosemite Ct.",
                            City = "Bothell",
                            CountryRegion = "United States",
                            PostalCode = "98011",
                            StateProvince = "Washington"
                        },
                        new
                        {
                            AddressId = 2,
                            AddressLine1 = "1318 Lasalle Street",
                            City = "Bothell",
                            CountryRegion = "United States",
                            PostalCode = "98011",
                            StateProvince = "Washington"
                        },
                        new
                        {
                            AddressId = 3,
                            AddressLine1 = "9178 Jumping St.",
                            City = "Dallas",
                            CountryRegion = "United States",
                            PostalCode = "75201",
                            StateProvince = "Texas"
                        },
                        new
                        {
                            AddressId = 4,
                            AddressLine1 = "9228 Via Del Sol",
                            City = "Phoenix",
                            CountryRegion = "United States",
                            PostalCode = "85004",
                            StateProvince = "Arizona"
                        },
                        new
                        {
                            AddressId = 5,
                            AddressLine1 = "26910 Indela Road",
                            City = "Montreal",
                            CountryRegion = "Canada",
                            PostalCode = "H1Y 2H5",
                            StateProvince = "Quebec"
                        },
                        new
                        {
                            AddressId = 6,
                            AddressLine1 = "2681 Eagle Peak",
                            City = "Bellevue",
                            CountryRegion = "United States",
                            PostalCode = "98004",
                            StateProvince = "Washington"
                        },
                        new
                        {
                            AddressId = 7,
                            AddressLine1 = "7943 Walnut Ave",
                            City = "Renton",
                            CountryRegion = "United States",
                            PostalCode = "98055",
                            StateProvince = "Washington"
                        },
                        new
                        {
                            AddressId = 8,
                            AddressLine1 = "6388 Lake City Way",
                            City = "Burnaby",
                            CountryRegion = "Canada",
                            PostalCode = "V5A 3A6",
                            StateProvince = "British Columbia"
                        },
                        new
                        {
                            AddressId = 9,
                            AddressLine1 = "52560 Free Street",
                            City = "Toronto",
                            CountryRegion = "Canada",
                            PostalCode = "M4B 1V7",
                            StateProvince = "Ontario"
                        },
                        new
                        {
                            AddressId = 10,
                            AddressLine1 = "22580 Free Street",
                            City = "Toronto",
                            CountryRegion = "Canada",
                            PostalCode = "M4B 1V7",
                            StateProvince = "Ontario"
                        },
                        new
                        {
                            AddressId = 11,
                            AddressLine1 = "2575 Bloor Street East",
                            City = "Toronto",
                            CountryRegion = "Canada",
                            PostalCode = "M4B 1V6",
                            StateProvince = "Ontario"
                        },
                        new
                        {
                            AddressId = 12,
                            AddressLine1 = "Station E",
                            City = "Chalk Riber",
                            CountryRegion = "Canada",
                            PostalCode = "K0J 1J0",
                            StateProvince = "Ontario"
                        },
                        new
                        {
                            AddressId = 13,
                            AddressLine1 = "575 Rue St Amable",
                            City = "Quebec",
                            CountryRegion = "Canada",
                            PostalCode = "G1R",
                            StateProvince = "Quebec"
                        },
                        new
                        {
                            AddressId = 14,
                            AddressLine1 = "2512-4th Ave Sw",
                            City = "Calgary",
                            CountryRegion = "Canada",
                            PostalCode = "T2P 2G8",
                            StateProvince = "Alberta"
                        },
                        new
                        {
                            AddressId = 15,
                            AddressLine1 = "55 Lakeshore Blvd East",
                            City = "Toronto",
                            CountryRegion = "Canada",
                            PostalCode = "M4B 1V6",
                            StateProvince = "Ontario"
                        },
                        new
                        {
                            AddressId = 16,
                            AddressLine1 = "6333 Cote Vertu",
                            City = "Montreal",
                            CountryRegion = "Canada",
                            PostalCode = "H1Y 2H5",
                            StateProvince = "Quebec"
                        },
                        new
                        {
                            AddressId = 17,
                            AddressLine1 = "3255 Front Street West",
                            City = "Toronto",
                            CountryRegion = "Canada",
                            PostalCode = "H1Y 2H5",
                            StateProvince = "Ontario"
                        },
                        new
                        {
                            AddressId = 18,
                            AddressLine1 = "2550 Signet Drive",
                            City = "Weston",
                            CountryRegion = "Canada",
                            PostalCode = "H1Y 2H7",
                            StateProvince = "Ontario"
                        },
                        new
                        {
                            AddressId = 19,
                            AddressLine1 = "6777 Kingsway",
                            City = "Burnaby",
                            CountryRegion = "Canada",
                            PostalCode = "H1Y 2H8",
                            StateProvince = "British Columbia"
                        },
                        new
                        {
                            AddressId = 20,
                            AddressLine1 = "5250-505 Burning St",
                            City = "Vancouver",
                            CountryRegion = "Canada",
                            PostalCode = "H1Y 2H9",
                            StateProvince = "British Columbia"
                        },
                        new
                        {
                            AddressId = 21,
                            AddressLine1 = "600 Slater Street",
                            City = "Ottawa",
                            CountryRegion = "Canada",
                            PostalCode = "M9V 4W3",
                            StateProvince = "Ontario"
                        });
                });

            modelBuilder.Entity("EntityFramework22Application.Model.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanyName")
                        .HasMaxLength(128);

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50);

                    b.Property<int>("EmployeeId");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50);

                    b.Property<bool>("NameStyle");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .IsUnicode(false);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Phone")
                        .HasMaxLength(25);

                    b.Property<string>("SalesPerson")
                        .HasMaxLength(256);

                    b.Property<string>("Suffix")
                        .HasMaxLength(10);

                    b.Property<string>("Title")
                        .HasMaxLength(8);

                    b.HasKey("CustomerId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1000,
                            CompanyName = "A Bike Store",
                            EmailAddress = "orlando0@adventure-works.com",
                            EmployeeId = 1,
                            FirstName = "John",
                            LastName = "Gee",
                            MiddleName = "N.",
                            NameStyle = false,
                            PasswordHash = "L/Rlwxzp4w7RWmEgXX+/A7cXaePEPcp+KwQhl2fJL7w=",
                            PasswordSalt = "1KjXYs4=",
                            Phone = "245-555-0173",
                            SalesPerson = "adventure-works\\pamela0",
                            Title = "Mr."
                        },
                        new
                        {
                            CustomerId = 1001,
                            CompanyName = "Progressive Sports",
                            EmailAddress = "keith0@adventure-works.com",
                            EmployeeId = 1,
                            FirstName = "Keith",
                            LastName = "Harris",
                            MiddleName = "N.",
                            NameStyle = false,
                            PasswordHash = "YPdtRdvqeAhj6wyxEsFdshBDNXxkCXn+CRgbvJItknw=",
                            PasswordSalt = "fs1ZGhY=",
                            Phone = "170-555-0127",
                            SalesPerson = "adventure-works\\david8",
                            Title = "Mr."
                        },
                        new
                        {
                            CustomerId = 1002,
                            CompanyName = "Advanced Bike Components",
                            EmailAddress = "donna0@adventure-works.com",
                            EmployeeId = 2,
                            FirstName = "Donna",
                            LastName = "Carreras",
                            MiddleName = "F.",
                            NameStyle = false,
                            PasswordHash = "LNoK27abGQo48gGue3EBV/UrlYSToV0/s87dCRV7uJk=",
                            PasswordSalt = "YTNH5Rw=",
                            Phone = "279-555-0130",
                            SalesPerson = "adventure-works\\jillian0",
                            Title = "Ms."
                        },
                        new
                        {
                            CustomerId = 1003,
                            CompanyName = "Modular Cycle Systems",
                            EmailAddress = "janet1@adventure-works.com",
                            EmployeeId = 3,
                            FirstName = "Janet",
                            LastName = "Gates",
                            MiddleName = "M.",
                            NameStyle = false,
                            PasswordHash = "ElzTpSNbUW1Ut+L5cWlfR7MF6nBZia8WpmGaQPjLOJA=",
                            PasswordSalt = "nm7D5e4=",
                            Phone = "710-555-0173",
                            SalesPerson = "adventure-works\\jillian0",
                            Title = "Ms."
                        });
                });

            modelBuilder.Entity("EntityFramework22Application.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("EmployeeId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            FirstName = "Paul",
                            LastName = "Orson"
                        },
                        new
                        {
                            EmployeeId = 2,
                            FirstName = "David",
                            LastName = "Kandle"
                        },
                        new
                        {
                            EmployeeId = 3,
                            FirstName = "Jillian",
                            LastName = "Jon"
                        });
                });

            modelBuilder.Entity("EntityFramework22Application.Model.Address", b =>
                {
                    b.HasOne("EntityFramework22Application.Model.Customer")
                        .WithMany("Addresses")
                        .HasForeignKey("CustomerId");
                });

            modelBuilder.Entity("EntityFramework22Application.Model.Customer", b =>
                {
                    b.HasOne("EntityFramework22Application.Model.Employee", "Employee")
                        .WithMany("Customer")
                        .HasForeignKey("EmployeeId");
                });
#pragma warning restore 612, 618
        }
    }
}
